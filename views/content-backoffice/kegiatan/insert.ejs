<%- include('../../template-backoffice/header.ejs'); -%>

<!-- BEGIN PAGE CONTENT -->
<div class="page-content">
  <div class="header">
    <h2><strong>Tambah Data Kegiatan </strong></h2>
    <div class="breadcrumb-wrapper">
      <ol class="breadcrumb">
        <li><a href="/dashboard">Dashboard</a></li>
        <li><a href="/kegiatan/list">Data</a></li>
        <li class="active">Tambah Data</li>
      </ol>
    </div>
  </div>

  <div class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
      <div class="panel">
        <div class="panel-content">
          <form role="form" action="/kegiatan/submit_insert" method="POST" enctype="multipart/form-data">
            <input type="hidden" name="xe" id="xe" >
            <input type="hidden" name="ye" id="ye" >
            <div class="row">
              <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div style="width: 100%;height: 500px;" id="map"></div>
              </div>
              <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" style="margin-top: 30px;">
                <div class="form-group">
                  <label>Kegiatan</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="text" class="form-control" name="kegiatanPrioritas" id="">
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Lokasi</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="text" class="form-control" name="lokasi" id="">
                    </div>
                  </div>
                </div>
                <div class="form-group">
                  <label>Tahun Anggaran</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <select name="tahun" id="tahun" class="form-control" data-search="true">
                        <% for(let i=2021; i <2051; i++) {%>
                          <option value="<%= i%>"><%= i%></option>
                          <% } %>
                      </select>
                    </div>
                  </div>
                </div>
                <div class="form-group">
                  <label>Jenis Pekerjaan</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <select name="jeniId" id="" class="form-control" data-search="true">
                        <option value="">-- Pilih --</option>
                        <% for(let i=0; i < jenisPekerjaan.length; i++) {%>
                          <option value="<%= jenisPekerjaan[i].id%>"><%= jenisPekerjaan[i].jenis%></option>
                          <% } %>
                      </select>
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Kecamatan</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <select name="kec" id="kec" class="form-control" data-search="true">
                        <option value="">-- Pilih --</option>
                        <% for(let i=0; i < kec.length; i++) {%>
                          <option value="<%= kec[i].nama_kecamatan%>"><%= kec[i].nama_kecamatan%></option>
                          <% } %>
                    </select>
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Kelurahan</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                        <select class="form-control" name="kel" id="kel" data-search="true">
                            <option value="">-- Pilih --</option>
                        </select>
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Volume</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="text" class="form-control" name="volume" id="">
                    </div>
                  </div>
                </div>

             
                <div class="form-group">
                  <label>Jenis Anggaran</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <select class="form-control" name="jenisAnggaran" id="">
                        <option value="APBD">APBD</option>
                          <option value="DAUT">Alokasi Dana Kelurahan (DAUT/APBN)</option>
                          <option value="APBDKEL">Alokasi Dana Kelurahan (APBD)</option>
                      </select>
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Jumlah Anggaran</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="text" class="form-control" name="jumlahAnggaran" id="">
                    </div>
                  </div>
                </div>


                <div class="form-group">
                  <label>Pelaksana</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="text" class="form-control" name="pelaksana" id="">
                    </div>
                  </div>
                </div>
                <%if(user.role=='Admin'){%>
                <div class="form-group">
                  <label>Kesesuaian Dengan PERWALI</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <select class="form-control" name="kesesuaian" id="">
                        <option value="0">Tidak Sesuai</option>
                          <option value="1">Sesuai</option>
                          
                      </select>
                    </div>
                  </div>
                </div>
                <%}%>
                <div class="form-group">
                  <label>Keterangan</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <textarea name="keterangan"  class="form-control" id="" rows="10"></textarea>
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Foto 1</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="file" class="form-control" name="foto1" id="">
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Foto 2</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="file" class="form-control" name="foto2" id="">
                    </div>
                  </div>
                </div>

                <div class="form-group">
                  <label>Foto 3</label>
                  <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                      <input type="file" class="form-control" name="foto3" id="">
                    </div>
                  </div>
                </div>

                <button type="submit" class="btn btn-primary btn-embossed">Simpan</button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="footer">
    <div class="copyright">
      <p class="pull-left sm-pull-reset">
        <span>Copyright <span class="copyright">Â©</span> 2020 </span>
        <span>Pemerintah Kota Salatiga</span>.
      </p>
    </div>
  </div>
</div>
<!-- END PAGE CONTENT -->

<%- include('../../template-backoffice/footer.ejs'); -%>
<script type="text/javascript">

$('#kec').change(function(){
      $('#kel').empty()
          $.get( "/kegiatan/kel/"+$(this).val(), function( data ) {
           data.forEach(element => {
            $('#kel').append(`<option value="${element.nama_kelurahan}">${element.nama_kelurahan}</option>`)
           });
           $('#kel').val(data[0].nama_kelurahan).trigger('change');
        });
    })

    function toWKT (layer) { 
                    var lng, lat, coords = []; 
                   if (layer instanceof L.Polygon || layer instanceof L.Polyline) { 
                     var latlngs = layer.getLatLngs(); 
                   for (var i = 0; i < latlngs.length; i++) { 
                       var latlngs1 = latlngs[i]; 
                       if (latlngs1.length){ 
                       for (var j = 0; j < latlngs1.length; j++) { 
                         coords.push(latlngs1[j].lng + " " + latlngs1[j].lat); 
                         if (j === 0) { 
                           lng = latlngs1[j].lng; 
                           lat = latlngs1[j].lat; 
                         } 
                       }} 
                       else 
                       { 
                         coords.push(latlngs[i].lng + " " + latlngs[i].lat); 
                         if (i === 0) { 
                           lng = latlngs[i].lng; 
                           lat = latlngs[i].lat; 
                         }} 
                   }; 
                     if (layer instanceof L.Polygon) { 
                       return "POLYGON((" + coords.join(",") + "," + lng + " " + lat + "))"; 
                     } else if (layer instanceof L.Polyline) { 
                       return "LINESTRING(" + coords.join(",") + ")"; 
                     } 
                   } else if (layer instanceof L.Marker) { 
                     return "POINT(" + layer.getLatLng().lng + " " + layer.getLatLng().lat + ")"; 
                   } 
                 }; 
              $(document).ready(function() { 
               
                  // $.ajax({ 
                  //   type : "GET", 
                  //   async : false, 
                  //   global : false, 
                  //   url : root + "peta/json_kec", 
                  //   dataType : 'json', 
                  //   success: function (data) { 
                  //    $("#kabupaten").empty(); 
                  //     $("#kabupaten").append('<option value="">Pilih Kecamatan / Kota</option>') 
                  //  $.each(data, function(){ 
                  //       $("#kabupaten").append('<option value="'+ this.kecamatan +'">'+ this.kecamatan +'</option>') 
                  //   }) 
                       
                  //   } 
                  // }); 
                   
                     $("#parsepeta").on("click", function () { 
                      drawnItems.clearLayers(); 
                      inputan_koordinat =""; 
                      end_koordinat = ""; 
                    var tableHtml=$('table.order-list')  // tableHtml is a jQuery of the table 
   
                    tableHtml.find('tbody > tr').each(function(){  
                          
                                         if(inputan_koordinat==""){ 
                           end_koordinat= ''+$(this).find('input[name^="x"]').val() +' '+$(this).find('input[name^="y"]').val() 
                          } 
                                        inputan_koordinat = inputan_koordinat+''+$(this).find('input[name^="x"]').val() +' '+$(this).find('input[name^="y"]').val()+','; 
                    }); 
                  inputan_koordinat = inputan_koordinat + end_koordinat; 
                    console.log(inputan_koordinat); 
                   layer_parse=   omnivore.wkt.parse('POLYGON(('+inputan_koordinat+'))'); 
   
                   $('#SHAPE').val('POLYGON(('+inputan_koordinat+'))'); 
                         layer_parse.eachLayer(function (layer) { 
   
                                            var bounds = layer.getBounds(); 
                              //         // Get center of bounds 
                                       var center = bounds.getCenter(); 
                               
   
                             drawnItems.addLayer(layer); 
                            }) 
                    }); 
                           $("#reset_peta").on("click", function () { 
                           drawnItems.clearLayers(); 
                             
                                 
                                                 $('#myTable tbody').html('<tr><td><input type="text" name="x[]" style="width:100%"/></td><td><input type="text" name="y[]" style="width:100%"/></td><td><a class="deleteRow" style="width:100%"></a></td> </tr>'); 
                                                  $('#wkt_inputan').empty(); 
                            
                          }); 
                             $("#addrow").on("click", function () { 
   
                         counter = $('#myTable tr').length - 2; 
   
                         var newRow = $("<tr>"); 
                         var cols = ""; 
   
                         cols += '<td><input type="text" name="x[]" style="width:100%"/></td>'; 
                         cols += '<td><input type="text" name="y[]" style="width:100%"/></td>'; 
   
                         cols += '<td><input type="button" class="ibtnDel"  value="Hapus" style="width:100%"></td>'; 
                         newRow.append(cols); 
                       //  if (counter == 4) $('#addrow').attr('disabled', true).prop('value', "You've reached the limit"); 
                         $("table.order-list").append(newRow); 
                         counter++; 
                         $("table.order-list").on("click", ".ibtnDel", function (event) { 
                             $(this).closest("tr").remove(); 
                          
                              
                             counter -= 1 
                             $('#addrow').attr('disabled', false).prop('value', "Tambah Koordinat"); 
                         }); 
                         //  var price = +row.find('input[name^="price"]').val(); 
                     }); 
                   
              }); 
            
   
               var warna_total = ['#ffffff','#ffffff']; 
                    var labels = ['','']; 
                     var wkt = new Wkt.Wkt(); 
                function onLocationFound(e) { 
                    var radius = e.accuracy / 2; 
                     
                    if(center == 0 ){ 
                      map.setView(e.latlng, 13); 
                      center++; 
                    } 
                   //   var koordinat = {latlng:{lat: ye, lng: xe}}; 
                    
                       
                   //console.log(koordinat) 
                    clickHandler(e) 
                    // iht_layer.eachLayer(function (layer) { 
                    //   layer_lat_long = layer.getLatLng(); 
                    //   layer_lat = layer.getLatLng().lat; 
                    //   layer_lng = layer.getLatLng().lng; 
   
                    //   // jarak ke point saat ini dalam meter 
                    //   var posisi_kita_lat = e.latlng.lat; 
                    //   var posisi_kita_lng = e.latlng.lng; 
   
                    //   jarak = layer_lat_long.distanceTo(e.latlng); 
   
                    //   var popupContent = getPopup( layer, posisi_kita_lat, posisi_kita_lng, layer_lat, layer_lng ); 
                    //   layer.bindPopup(popupContent, popupOptions); 
                    //   if(jarak > 30000){ 
                    //      // layer.setOpacity(0); 
                    //      // layer.unbindPopup(); 
                    //   } 
                    // }); 
                  } 
                 
   
                   
                  function ke_lokasi(x_awal, y_awal, x_akhir, y_akhir){ 
                    map.closePopup(); 
                    console.log(x_awal+ ' , ' +y_awal+ ' ; ' +x_akhir + ' , ' + y_akhir) 
   
                    if(navigasi!=null){ 
                      navigasi.spliceWaypoints(navigasi.getWaypoints().length - 1, 1, L.latLng(x_akhir, y_akhir));    
                    } 
                    else{ 
                      navigasi =  L.Routing.control({ 
                        // waypointIcon : 
                        // waypoints : [L.latLng(x_awal, y_awal), L.latLng(x_akhir, y_akhir)] 
                        plan: L.Routing.plan([ 
                            L.latLng(x_awal, y_awal), 
                            L.latLng(x_akhir, y_akhir) 
                        ],  
                        { 
                          createMarker: function(i, wp) { 
                            return L.marker(wp.latLng, { 
                              draggable: false, 
                              icon: routeIcon 
                            }); 
                          } 
                          // geocoder: L.Control.Geocoder.nominatim(), 
                          // routeWhileDragging: true 
                        }) 
                      }); 
                      navigasi.addTo(map); 
                      console.log(navigasi.getPlan()); 
                      $('.leaflet-routing-container').append('<a href="#" id="tutup_navigasi" onclick="tutup_navigasi()">BATAL</a>'); 
                    } 
                  } 
                   
                  function tutup_navigasi() { 
                    if(navigasi!=null){ 
                      navigasi.spliceWaypoints(0, 2); 
                      $('.leaflet-routing-container').hide(); 
                      navigasi = null; 
                    } 
                  } 
   
                  function tambah_titik(x, y, id_jalan){ 
   
                    map.panTo(new L.LatLng(x, y)); 
                    map.setZoom(16); 
   
                    jalan_layer.eachLayer(function (layer) { 
                      if ( layer.feature.properties.id_jalan == id_jalan ) { 
                        console.log(layer.feature.properties) 
                        layer.openPopup(); 
                      }; 
                    }); 
                  } 
   
                  $('#cari').click(function(){ 
                    var xe =  $('#xe').val(); 
                    var ye = $('#ye').val(); 
                      map.setView(new L.LatLng(ye, xe), 16); 
                    var koordinat = {latlng:{lat: ye, lng: xe}}; 
                  var marker = L.marker(new L.LatLng(ye, xe)).addTo(map); 
                       
                   //console.log(koordinat) 
                   // clickHandler(koordinat) 
                  }) 
   
   
                  /** 
                   *  
                   *  Variables Initialization 
                   *  
                   */ 
                  var kabupaten_layer; 
                  var iht_layer = null; 
                  var source = null; 
                  var marker; 
                  var lingkaran; 
                  var center = 0; 
                  var navigasi=null; 
                  var kabupaten_layer; 
                  var marker_search=''; 
   
                  /** 
                   *  
                   *  Layer Styling 
                   *  
                   */ 
                  var sembunyi = { 
                    color : "transparent", 
                    weight : 1, 
                    opacity : 0, 
                    fillOpacity : 0 
                  }; 
                   
                   var style_kabupaten = { 
                        color : "yellow",  
                        weight : 3,  
                        opacity : 1,  
                        fillOpacity  : 0, 
                        dashArray : 3 
                      }; 
                   var style_gambar = { 
                        color : "blue",  
                        weight : 2,  
                        opacity : 1,  
                        fillOpacity  : 0 
                         
                      }; 
                       var style_desa = { 
                        color : "white",  
                        weight : 1,  
                        opacity : 1,  
                        fillOpacity  : 0, 
                        dashArray : 3 
                      }; 
          
                
                 
   
                  var style_kabupaten_gelap = { 
                    color : "#000",  
                    weight : 1,  
                    opacity : 1,  
                    fillOpacity  : 0, 
                    dashArray : 3 
                  }; 
                   
                  var popupOptions = { 
                    maxWidth : '450', 
                    minWidth : '250', 
                    className : 'custom', 
                    closeOnClick : true 
                  }; 
   
                  /** 
                   *  
                   *  Map initialization 
                   *  
                  . The Longitude of Kota Pati is  
                   */ 
                  var southWest = L.latLng(-8.629903118263488, 108.0780029296875), 
                    northEast = L.latLng(-6.124169589851178, 112.52746582031249), 
                    bounds = L.latLngBounds(southWest, northEast); 
                   var map = L.map('map', { 
                      center: [ -7.337950752501019, 110.50460815429689], 
                      // maxBounds: bounds, 
                      zoom: 12, 
                      minZoom:2, 
                      maxZoom:19, 
                      fullscreenControl: true, 
                      fullscreenControlOptions: { 
                        position: 'topleft' 
                      } 
                  }); 
   
   
                  //ngilangi garis putih 
           
   
   
   
                    function clickHandler(e) { 
                    
         //  var clickBounds = L.latLngBounds(e.latlng, e.latlng); 
   
         //  var intersectingFeatures = []; 
         //    for (var l in map._layers) { 
         //    var overlay = map._layers[l]; 
         //    if (overlay._layers) { 
         //      for (var f in overlay._layers) { 
         //        var feature = overlay._layers[f]; 
         //        var bounds; 
         //        if (feature.getBounds) bounds = feature.getBounds(); 
         //        else if (feature._latlng) { 
         //          bounds = L.latLngBounds(feature._latlng, feature._latlng); 
         //        } 
         //        if (bounds && clickBounds.intersects(bounds)) { 
         //          intersectingFeatures.push(feature); 
         //        } 
         //      } 
         //    } 
         //  } 
         // intersectingFeatures.map(function(o) { 
         //    console.log(o) 
         //  }) 
         //  var html = "Found features: " + intersectingFeatures.length + "<br/>" + intersectingFeatures.map(function(o) { 
         //    return o.feature 
         //  }).join('<br/>'); 
         $('#xe').val(e.latlng.lng)  
         $('#ye').val(e.latlng.lat)  
        var html =""; 
          
          html = html + "</br></br>Pola Ruang RTRW : </br>" 
         $.ajax({ 
                  type : "GET", 
                  async : false, 
                  global : false, 
                  url : root + "peta/list_polaruang?x="+e.latlng.lng+"&y="+e.latlng.lat, 
                  dataType : 'json', 
                  success: function (data) { 
                 // console.log(data) 
                 $.each(data, function(){ 
                      html = html + this.rencana_tg+"</br>"; 
                  }) 
                     
                  } 
                }); 
   
         html = html + "</br>Koordinat : </br>" 
          html = html + "</br>"+e.latlng.lng+" "+e.latlng.lat+"</br>" 
   
           
              
          map.openPopup(html, e.latlng); 
        } 
   
   
   
   
   
                  // map.fitBounds(bounds); 
   
                  var google_roadmap    = L.gridLayer.googleMutant({ 
                                                                  type: 'roadmap', 
                                                                  styles: [ 
                                                                              {elementType: 'geometry', stylers: [{color: '#242f3e'}]}, 
                                                                              {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]}, 
                                                                              {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]}, 
                                                                              { 
                                                                                featureType: 'administrative.locality', 
                                                                                elementType: 'labels.text.fill', 
                                                                                stylers: [{color: '#d59563'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'poi', 
                                                                                elementType: 'labels.text.fill', 
                                                                                stylers: [{color: '#d59563'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'poi.park', 
                                                                                elementType: 'geometry', 
                                                                                stylers: [{color: '#263c3f'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'poi.park', 
                                                                                elementType: 'labels.text.fill', 
                                                                                stylers: [{color: '#6b9a76'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'road', 
                                                                                elementType: 'geometry', 
                                                                                stylers: [{color: '#38414e'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'road', 
                                                                                elementType: 'geometry.stroke', 
                                                                                stylers: [{color: '#212a37'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'road', 
                                                                                elementType: 'labels.text.fill', 
                                                                                stylers: [{color: '#9ca5b3'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'road.highway', 
                                                                                elementType: 'geometry', 
                                                                                stylers: [{color: '#746855'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'road.highway', 
                                                                                elementType: 'geometry.stroke', 
                                                                                stylers: [{color: '#1f2835'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'road.highway', 
                                                                                elementType: 'labels.text.fill', 
                                                                                stylers: [{color: '#f3d19c'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'transit', 
                                                                                elementType: 'geometry', 
                                                                                stylers: [{color: '#2f3948'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'transit.station', 
                                                                                elementType: 'labels.text.fill', 
                                                                                stylers: [{color: '#d59563'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'water', 
                                                                                elementType: 'geometry', 
                                                                                stylers: [{color: '#17263c'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'water', 
                                                                                elementType: 'labels.text.fill', 
                                                                                stylers: [{color: '#515c6d'}] 
                                                                              }, 
                                                                              { 
                                                                                featureType: 'water', 
                                                                                elementType: 'labels.text.stroke', 
                                                                                stylers: [{color: '#17263c'}] 
                                                                              } 
                                                                            ] 
                                                             // valid values are 'roadmap', 'satellite', 'terrain' and 'hybrid' 
                                                              }) 
   
                  var google_hybrid     = L.gridLayer.googleMutant({ 
                                                                  type: 'hybrid' // valid values are 'roadmap', 'satellite', 'terrain' and 'hybrid' 
                                                              }) 
                  var google_satelit    = L.gridLayer.googleMutant({ 
                                                                  type: 'satellite' // valid values are 'roadmap', 'satellite', 'terrain' and 'hybrid' 
                                                              }) 
                  var osm               = L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {}); 
                  var Esri_WorldImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'); 
                 // var RBI            = L.tileLayer('http://portal.ina-sdi.or.id/arcgis/rest/services/IGD/RupabumiIndonesia/MapServer'); 
   
                  var RBI =  L.esri.tiledMapLayer({ 
                    url: "https://portal.ina-sdi.or.id/arcgis/rest/services/IGD/RupabumiIndonesia/MapServer" 
                  }); 
                                 (function(){ 
                      var originalInitTile = L.GridLayer.prototype._initTile 
                      L.GridLayer.include({ 
                          _initTile: function (tile) { 
                              originalInitTile.call(this, tile); 
   
                              var tileSize = this.getTileSize(); 
   
                              tile.style.width = tileSize.x + 1 + 'px'; 
                              tile.style.height = tileSize.y + 1 + 'px'; 
                          } 
                      }); 
                  })() 
                  map.addLayer(google_hybrid); 
   
                  var legend = L.control({position: 'bottomleft'}); 
                  var streetview = L.control({position: 'bottomright'}); 
                   
                  //gambar 
                  var drawnItems = L.featureGroup().addTo(map); 
                  var options = { 
                        position: 'topleft', 
                        draw: { 
                            polyline: false, 
                            polygon:false, 
                            circle: false, // Turns off this drawing tool 
                            rectangle: false, 
                            marker: true 
                        }, 
                        edit: { 
                            featureGroup: drawnItems, //REQUIRED!! 
                            remove: true 
                        } 
                    }; 
                     
                    var drawControl = new L.Control.Draw(options); 
                   map.addControl(drawControl); 
                     
                   map.on(L.Draw.Event.CREATED, function(event) { 
                       drawnItems.clearLayers(); 
                        var layer = event.layer; 
                              var latlngss = layer.getLatLng(); 
                      // console.log(latlngss) 
                          $('#xe').val(latlngss.lng);
                          $('#ye').val(latlngss.lat);
                          map.setView(new L.LatLng(latlngss.lat, latlngss.lng), 18); 
                          peta_pemohon(toWKT(layer)) 
                        
                      
                      }); 

                      map.on(L.Draw.Event.EDITED, function(event) { 
                      
                      event.layers.eachLayer(function (layer) { 
                      
                              var latlngss = layer.getLatLng(); 
                     
                          $('#xe').val(latlngss.lng);
                          $('#ye').val(latlngss.lat);
                          // map.setView(new L.LatLng(latlngss.lat, latlngss.lng), 18); 
                          // peta_pemohon(toWKT(layer)) 
                    }) 
                      
                      }); 
   
   
                  //gambar end  
   
   
   
                  var locateIcon = L.ExtraMarkers.icon({ 
                      icon: 'fa-map-marker',  
                      markerColor: 'blue-dark',  
                      prefix: 'fa', 
                      iconColor: 'white', 
                      shape: 'square' 
                  }); 
   
                  var ihtIconAktif = L.ExtraMarkers.icon({ 
                      prefix: 'fa',  
                      markerColor: 'green-light',  
                      icon: 'fa-building',  
                      iconColor: 'white', 
                      shape: 'square' 
                  }); 
   
                  var ihtIconTidakAktif = L.ExtraMarkers.icon({ 
                      prefix: 'fa',  
                      markerColor: 'red',  
                      icon: 'fa-ban',  
                      iconColor: 'white', 
                      shape: 'square' 
                  }); 
   
                  var ihtIconTidakDiketahui = L.ExtraMarkers.icon({ 
                      prefix: 'fa',  
                      markerColor: 'orange',  
                      icon: 'fa-question',  
                      iconColor: 'white', 
                      shape: 'square' 
                  }); 
   
                  var routeIcon = L.ExtraMarkers.icon({ 
                      prefix: 'fa',  
                      markerColor: 'red',  
                      icon: 'fa-location-arrow',  
                      iconColor: 'white', 
                      shape: 'square' 
                  }); 
   
                  // $.getJSON( root + "index.php/kabupaten", function( json ) { 
                  //   $.each(json, function( i, item ) { 
                  //     $('#kabupaten').append('<option value="'+item.id_kabupaten+'">'+item.nama_kabupaten+'</option>'); 
                  //   }) 
                  // }); 
                //ambil ksp   
                var label_kec = []; 
                var label_desa = []; 
            var popup = new L.popup(); 
                
                        //topojson 
                        L.TopoJSON = L.GeoJSON.extend({   
                          addData: function(jsonData) {     
                            if (jsonData.type === "Topology") { 
                              for (key in jsonData.objects) { 
                                geojson = topojson.feature(jsonData, jsonData.objects[key]); 
                                L.GeoJSON.prototype.addData.call(this, geojson); 
                              } 
                            }     
                            else { 
                              L.GeoJSON.prototype.addData.call(this, jsonData); 
                            } 
                          }   
                        }); 
                        //topojson 
                  var wellmaxzoom = 13;        
                var polaruang_layer = new L.GeoJSON(); 
                var kabupaten_layer = new L.TopoJSON(); 
                var desa_layer = new L.TopoJSON(); 
         
             
           
                var rtlh = new L.TopoJSON(); 
                var rtlh_markers = L.markerClusterGroup(); 
                 
                //hapus labeh 
                function hapus_label_kec(){ 
                   var ii = 0; 
                        kabupaten_layer.eachLayer(function (layer) { 
                      map.removeLayer(label_kec[ii]); 
                      // label[ii].clearLayers(); 
                       ii++; 
                    }) 
                        label_kec = []; 
                } 
                function tampil_label_kec(){ 
                   var ii = 0; 
                            kabupaten_layer.eachLayer(function (layer) { 
                              label_kec[ii].setOpacity(1); 
                          // label[ii].clearLayers(); 
                           ii++; 
                        }) 
                } 
                function hide_label_kec(){ 
                   var ii = 0; 
                            kabupaten_layer.eachLayer(function (layer) { 
                              label_kec[ii].setOpacity(0); 
                          // label[ii].clearLayers(); 
                           ii++; 
                        }) 
                } 
   
                function hapus_label_desa(){ 
                   var ii = 0; 
                        desa_layer.eachLayer(function (layer) { 
                         if(label_desa[ii]){ 
                           map.removeLayer(label_desa[ii]); 
                         } 
                       
                      // label[ii].clearLayers(); 
                       ii++; 
                    }) 
                        label_desa = []; 
                } 
                function tampil_label_desa(){ 
                   var ii = 0; 
                            desa_layer.eachLayer(function (layer) { 
                              label_desa[ii].setOpacity(1); 
                          // label[ii].clearLayers(); 
                           ii++; 
                        }) 
                } 
                function hide_label_desa(){ 
                   var ii = 0; 
                            desa_layer.eachLayer(function (layer) { 
                              label_desa[ii].setOpacity(0); 
                          // label[ii].clearLayers(); 
                           ii++; 
                        }) 
                } 
                function loadGeoJsonkec(data) { 
                  //hapus_label_kec(); 
                  kabupaten_layer.clearLayers(); 
                  kabupaten_layer.addData(data); 
   
                  kabupaten_layer.addTo(map); 
                  var i = 0; 
                  var labelnya = ""; 
                   kabupaten_layer.eachLayer(function (layer) { 
   
                         
                          layer.setStyle(style_kabupaten); 
                          // layer.bindPopup(feature.properties.kabupaten); 
                          // Get bounds of polygon 
                          var bounds = layer.getBounds(); 
                          // Get center of bounds 
                          var center = bounds.getCenter(); 
                          //center.on('click', alert('asu')); 
                          // Use center to put marker on map 
                          //var marker = L.marker(center).addTo(map); 
                          //labelnya 
                           label_kec[i] = new L.Tooltip({ 
                          noHide: false, 
                          direction: 'auto', 
                          permanent : true 
                          }); 
                            labelnya = layer.feature.properties.kecamatan; 
                            
                        label_kec[i].setContent(labelnya); 
                        label_kec[i].setLatLng(center); 
                       // label_kec[i].setOpacity(0); 
                        map.showLabel(label_kec[i]); 
                         layer.on('click', function (e) { 
                                         //  panorama(e.latlng.lat, e.latlng.lng); 
                                           // clickHandler(e) 
                                            }); 
                        i++; 
                          // layer.on("click", function (e) { 
                          //       // var bounds = layer.getBounds(); 
                          //       // var popupContent = "popup content here"; 
                          //       // popup.setLatLng(bounds.getCenter()); 
                          //       // popup.setContent(popupContent); 
                          //       // map.openPopup(popup); 
                          //    //  $('#bs-example-modal-lg').modal('show'); 
                          //   }); 
                   }); 
                } 
                function loadGeoJsondesa(data) { 
   
                  hapus_label_desa(); 
                  desa_layer.clearLayers(); 
                  desa_layer.addData(data); 
                  desa_layer.addTo(map); 
                  var i = 0; 
                  var labelnya = ""; 
                   desa_layer.eachLayer(function (layer) { 
   
                         
                             layer.setStyle(style_desa); 
   
                          // layer.bindPopup(feature.properties.kabupaten); 
                          // Get bounds of polygon 
                          var bounds = layer.getBounds(); 
                          // Get center of bounds 
                          var center = bounds.getCenter(); 
                          //center.on('click', alert('asu')); 
                          // Use center to put marker on map 
                          //var marker = L.marker(center).addTo(map); 
                          //labelnya 
                           label_desa[i] = new L.Tooltip({ 
                          noHide: false, 
                          direction: 'auto', 
                          permanent : true 
                          }); 
                            labelnya = layer.feature.properties.desa; 
                            
                        label_desa[i].setContent(labelnya); 
                        label_desa[i].setLatLng(center); 
                        label_desa[i].setOpacity(0); 
                        map.showLabel(label_desa[i]); 
                         layer.on('click', function (e) { 
               
                                            }); 
                        i++; 
                      
                   }); 
                   tampil_label_desa(); 
                   map.removeLayer(drawnItems); 
                  drawnItems.addTo(map); 
   
                 // map.removeLayer(rtlh); 
                //  rtlh.addTo(map); 
                } 
                function loadGeoJsonrtlh(data) { 
                 
                  rtlh.clearLayers(); 
                  rtlh.addData(data); 
                  rtlh.addTo(map); 
              
                  var i = 0; 
                  var labelnya = ""; 
                 //  console.log(data.objects.output.geometries.length) 
                  rtlh.eachLayer(function (layer) { 
   
                         
                         // layer.setStyle(style_sempadan_sungai); 
                         // layer.bindPopup(layer.feature.properties.rencana_tg); 
                          // Get bounds of polygon 
                         // var bounds = layer.getBounds(); 
                          // Get center of bounds 
                         // var center = bounds.getCenter(); 
                          //center.on('click', alert('asu')); 
                          // Use center to put marker on map 
                          //var marker = L.marker(center).addTo(map); 
                          //labelnya 
                  //         var stl = { 
                  //   color : "cyan",  
                  //   weight : 3,  
                  //   opacity : 1,  
                  //   fillOpacity  : 0.6 
                  // }; 
                  // layer.setStyle(stl); 
                   var icon = new L.Icon.Default(); 
                    icon.options.shadowSize = [0,0]; 
                    layer.setIcon(icon); 
                    rtlh_markers.addLayer(layer); 
   
                   var popupContent = "Pemilik : "+layer.feature.properties.nama; 
                        popupContent = popupContent+"</br>Alamat : "+layer.feature.properties.alamat; 
                        popupContent = popupContent+"</br>Luas (Ha) : "+layer.feature.properties.luas_rmh; 
                        popupContent = popupContent+"</br>Status Tanah  : "+layer.feature.properties.status_tnh; 
                        // var n = layer.feature.properties.foto_tampak_depan.search("-"); 
                        var foto = layer.feature.properties.foto_tampak_dpn; 
                        // if(n > -1){ 
                        //     foto = foto.split("-"); 
                        //     foto = foto[0]; 
                        // } 
                        popupContent = popupContent+'<img src="/foto/'+foto+'" class="img-responsive" style="height: 100px;"> '; 
                  
   
                        i++; 
                        // if(data.objects.output.geometries.length == 1){ 
                        //      var bounds = layer.getBounds(); 
                        //      map.fitBounds(bounds) 
                        //        popup.setLatLng(bounds.getCenter()); 
                        //        popup.setContent(popupContent); 
                        //         map.openPopup(popup); 
                        // } 
                          layer.on("click", function (e) { 
                             //  var bounds = layer.getBounds(); 
                                popup.setLatLng(layer.getLatLng()); 
                              popup.setContent(popupContent); 
                                map.openPopup(popup); 
                             //  $('#bs-example-modal-lg').modal('show'); 
                            }); 
                   }); 
                     map.removeLayer(rtlh); 
                      map.addLayer(rtlh_markers); 
                } 
             
            
                
             
            
                 
               
        // do stuff after marker has been added 
   
           
        function doAnimations(){ 
           var myIcon = document.querySelector('.gps_ring') 
          //sesudah 
           myIcon.style.width = '1000px' 
            
        } 
                
                //ambil kec 
                  var geoJsonUrl =root+"peta/topojson_kec";  
                    $.getJSON(geoJsonUrl) 
                      .done(loadGeoJsonkec); 
                      //ambil polaruang 
                    //   var geoJsonUrl =root+"peta/topojson_polaruang";  
                    // $.getJSON(geoJsonUrl) 
                    //   .done(loadGeoJsonpolaruang); 
                       
                     
                       
                    //pencarian 
   
                    $('#kecamatan').change(function(){ 
                        if($('#kecamatan').val()=="0"){ 
                            alert("Pilih Desa Terlebih Dahulu !") 
                        }else{ 
                         $.ajax({ 
                                  type : "GET", 
                                  async : false, 
                                  global : false, 
                                  url : root + "peta/desa?kecamatan="+$('#kecamatan').val(), 
                                  dataType : 'json', 
                                  success: function (data) { 
                                 $('#desa').empty() 
                                 $('#desa').append('<option value="0">-- Pilih Desa --</option>') 
                                 $.each(data, function(index, item){ 
                                
                                      $('#desa').append('<option value="'+item.xe+','+item.ye+','+item.nm_desa+'">'+item.nm_desa+'</option>') 
                                  }) 
                                     
                                  } 
                                });    
                        } 
                         
                    }) 
   
                     //  map.on('moveend', function(){ 
                     //   if(map.getZoom() > 10 && map.getZoom() < 14){ 
                     //         tampil_label_kec(); 
                     //   }else{ 
                     //    hide_label_kec(); 
                     //   } 
                     // }) 
                        var kiri_atas_lng  = map.getBounds().getSouthWest().lng; 
                  var kiri_atas_lat  = map.getBounds().getSouthWest().lat; 
                  var kanan_bawah_lng = map.getBounds().getNorthEast().lng; 
                  var kanan_bawah_lat = map.getBounds().getNorthEast().lat; 
                      
                           
                          
                      //end ambil_kec 
   
                //saat pindah 
                function ambil_desa(){ 
   
                } 
                map.on('moveend', function(){ 
                 if(map.getZoom() > wellmaxzoom){ 
                  //kembali ke asal 
   
                  
                 //kembali ke asal 
   
                  var kiri_atas_lng  = map.getBounds().getSouthWest().lng; 
                  var kiri_atas_lat  = map.getBounds().getSouthWest().lat; 
                  var kanan_bawah_lng = map.getBounds().getNorthEast().lng; 
                  var kanan_bawah_lat = map.getBounds().getNorthEast().lat; 
                 //   var geoJsonUrl =root + "index.php/peta/geo_kec_bound/"+kiri_atas_lng+"/"+kiri_atas_lat+"/"+kanan_bawah_lng+"/"+kanan_bawah_lat;  
                    var geoJsonUrl =root+"peta/topojson_desa?kiri_lng="+kiri_atas_lng+"&kiri_lat="+kiri_atas_lat+"&kanan_lng="+kanan_bawah_lng+"&kanan_lat="+kanan_bawah_lat;  
                   // console.log(geoJsonUrl); 
                  // console.log(map.getBounds().toBBoxString()); 
                  // console.log(map.getBounds().getSouthWest().lng + ';' + map.getBounds().getSouthWest().lat + ';' + map.getBounds().getNorthEast().lng + ';' + map.getBounds().getNorthEast().lat); 
                //    var boundingBox = L.rectangle(map.getBounds(), {color: "#ff7800", weight: 1}); 
                // map.addLayer(boundingBox); 
                    // $.ajax({ 
                    //     url: geoJsonUrl, 
                    //     datatype: 'json', 
                    //     jsonCallback: 'getJson', 
                    //     success: loadGeoJson 
                    //     }); 
                    //load desa 
                    // $.getJSON(geoJsonUrl) 
                    //   .done(loadGeoJsondesa); 
   
   
                       
                    }else{ 
                    hapus_label_desa(); 
                      map.removeLayer(desa_layer); 
                    }; 
                }); 
   
                //end moveend 
   
           legend.onAdd = function (map) { 
                    var div = L.DomUtil.create('div', 'info-legend') 
                    
                   // loop through our density intervals and generate a label with a colored square for each interval 
                    for (var i = 0; i < warna_total.length; i++) { 
                      div.innerHTML += '<i style="background:' + warna_total[i] + '"></i> ' + labels[i] + '<br>'; 
                    } 
                    return div; 
                  }; 
   
                 legend.addTo(map); 
   
                  var baseLayers = { 
                    "Google Roadmap": google_roadmap, 
                    "Google Hybrid": google_hybrid, 
                    "Google Satellite": google_satelit, 
                    "Open Street Map": osm, 
                    "ESRI World Imagery": Esri_WorldImagery, 
                    "RBI": RBI 
                  }; 
                   
                  // var overlays = { 
                  //   "kecamatan": kabupaten_layer, 
                  //   "<span>RTRW Semapadan Sungai</span>&nbsp;&nbsp;<span style='background-color:#499277;padding:2px 8px 2px 8px;'></span>": sempadan_sungai, 
                  //   "<span>RTRW Sempadan Pantai</span>&nbsp;&nbsp;<span style='background-color:#3F786F;padding:2px 8px 2px 8px;'></span>": sempadan_pantai, 
                  //   "<span>RTRW Kawasan Konservasi/KA</span>&nbsp;&nbsp;<span style='background-color:#195344;padding:2px 8px 2px 8px;'></span>": kawasan_konservasi, 
                  //   "<span>RTRW Hutan Lindung</span>&nbsp;&nbsp;<span style='background-color:#8C8D88;padding:2px 8px 2px 8px;'></span>": hutan_lindung, 
                  //   "<span>RTRW Tambak</span>&nbsp;&nbsp;<span style='background-color:#48B3C5;padding:2px 8px 2px 8px;'></span>": tambak, 
                  //   "<span>RTRW Lahan Basah Kering</span>&nbsp;&nbsp;<span style='background-color:#C8DEB0;padding:2px 8px 2px 8px;'></span>": lahan_basah_kering, 
                  //   "<span>RTRW Permukiman Perkotaan</span>&nbsp;&nbsp;<span style='background-color:#E8B05D;padding:2px 8px 2px 8px;'></span>": permukiman_perkotaan, 
                  //   "<span>RTRW Permukiman Perdesaan</span>&nbsp;&nbsp;<span style='background-color:#E8B05D;padding:2px 8px 2px 8px;'></span>": permukiman_perdesaan, 
                  //   "<span>RTRW Perkebunan</span>&nbsp;&nbsp;<span style='background-color:#ABBC6E;padding:2px 8px 2px 8px;'></span>": perkebunan, 
                  //   "<span>RTRW Industri</span>&nbsp;&nbsp;<span style='background-color:#9E8986;padding:2px 8px 2px 8px;'></span>": industri, 
                  //   "<span>RTRW Hutan Produksi Terbatas</span>&nbsp;&nbsp;<span style='background-color:#7EA4D3;padding:2px 8px 2px 8px;'></span>": hutan_produksi_terbatas, 
                  //   "<span>RTRW Hutan Produksi</span>&nbsp;&nbsp;<span style='background-color:#7EA4D3;padding:2px 8px 2px 8px;'></span>": hutan_produksi, 
                  //   "<span>Jalan</span>&nbsp;&nbsp;<span style='background-color:red;padding:2px 8px 2px 8px;'></span>": jalan_layer 
                    
                     
                  // }; 
                   
                  // L.control.layers(baseLayers,overlays,{ 
                  //   position : 'topright' 
                  // }, {'drawlayer':drawnItems}, { position: 'topleft', collapsed: false }).addTo(map); 
   
                                  var groupedOverlays = { 
                                       "Administrasi": { 
                         "&nbsp;&nbsp;&nbsp;&nbsp;Kabupaten": kabupaten_layer
                         }, 
                         "Layer": { 
                          
                       
                   
                  } 
                       }; 
                             var options = { 
               // Make the "Landmarks" group exclusive (use radio inputs) 
              // exclusiveGroups: ["Landmarks"], 
               // Show a checkbox next to non-exclusive group labels for toggling all 
               collapsed:true, 
               groupCheckboxes: false 
             }; 
                  L.control.groupedLayers(baseLayers, groupedOverlays, options).addTo(map); 
                
                  
   
   
                  streetview.onAdd = function (map) { 
                    var div = L.DomUtil.create('div', 'sv') 
                    
                   // loop through our density intervals and generate a label with a colored square for each interval 
                      div.innerHTML += ''; 
                     
                    return div; 
                  }; 
   
                 // streetview.addTo(map); 
   
                  L.control.scale({ 
                    position : 'bottomright', 
                    metric : true, 
                    imperial : false 
                  }).addTo(map); 
                   
                  // lc = L.control.locate({ 
                  //   position : 'topleft', 
                  //   follow : true, 
                  //   strings : { 
                  //     title : "Lokasi Anda", 
                  //     popup: "Anda berada di radius {distance} {unit} dari titik ini" 
                  //   }, 
                  //   markerClass : L.marker, 
                  //   markerStyle : {icon: locateIcon}, 
                  //   keepCurrentZoomLevel : true 
                  // }).addTo(map); 
   
                  map 
                    .on('startfollowing', function() { 
                      map.on('dragstart', lc._stopFollowing, lc); 
                    }) 
                    .on('stopfollowing', function() { 
                        map.off('dragstart', lc._stopFollowing, lc); 
                    }); 
   
                  map.on('locationfound', onLocationFound); 
                   
   
                  // map.on('moveend', function() {  
                  //      console.log(map.getBounds()); 
                  // }); 
   
                  map.on('baselayerchange', function(e) { 
                    console.log(e.name); 
   
                    if ( e.name == 'Google Roadmap' || e.name == 'Open Street Map' || e.name == 'Mapbox Street') { 
                      kabupaten_layer.eachLayer(function (layer) { 
                     //   layer.setStyle(style_kabupaten_gelap); 
                      }); 
                    }else{ 
                      kabupaten_layer.eachLayer(function (layer) { 
                        layer.setStyle(style_kabupaten); 
                      }); 
                    } 
   
                  }); 
                   
                  //ganti kabupaten 
                  $('#search_maps').hide(); 
   
   
                 // $('.leaflet-bottom.leaflet-left').hide(); 
                   
                  $('.leaflet-bar-part.leaflet-bar-part-single').click(function () { 
                    
                  }) 
                   
   
                  //panorama 
                 var marker= ""; 
                 var titik_panorama = null; 
                  function panorama(xe,ye){ 
                     if(titik_panorama != null){ 
                    map.removeLayer(titik_panorama);      
                     } 
                     if(marker!=""){ 
                       map.removeLayer(marker); 
                        
                     } 
                        titik_panorama = L.marker([xe, ye]).addTo(map); 
                     var fenway = new google.maps.LatLng(xe,ye); 
                       var panoramaOptions = { 
                         position: fenway, 
                         pov: { 
                           heading: 34, 
                           pitch: 10 
                         } 
                       }; 
                       var panorama = new  google.maps.StreetViewPanorama(document.getElementById('pano'),panoramaOptions); 
                      
                } 
                  map.on('click', function(e) { 
   
                console.log(e.latlng.lat+' '+e.latlng.lng); 
              // var xe = e.latlng.lat; 
              // var ye = e.latlng.lng; 
                
              // panorama(xe,ye) 
              
                      
            });
</script>